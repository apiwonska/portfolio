@use './variables'as *;
@use './mixins'as *;
@use './variables'as *;

html {
  font-family: get-font(default);
  font-size: 10px;
  line-height: 1.45;
  color: get-color(neutrals-black);
  background-color: get-color(neutrals-white);
  // causing problems with duration option in react-scroll and scrolling in Chrome
  // scroll-behavior: smooth;   
}

@media (max-width: 800px) {
  html {
    font-size: 9px;
  }
}

@media (max-width: 400px) {
  html {
    font-size: 8px;
  }
}

body {
  min-height: 100vh;
  min-width: 300px;
  background-color: get-color(neutrals-white);
}

*,
*::before,
*::after {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}

*:focus-visible {
  outline: none;
}

*:focus {
  outline: none;
}

body {

  // input,
  // textarea 
  // select,
  a,
  button {
    &:focus-visible {
      outline-color: get-color(main);
      outline-offset: -.2rem;
      outline-style: dashed;
      outline-width: 1px;
    }
  }
}

*:link,
*:visited {
  text-decoration: none;
  color: inherit;
}

p {
  margin: 0.4em 0 0.5em;
}

ul {
  list-style: none;
}

@each $class,
$font-size in $header-sizes {

  #{$class} {
    font-size: $font-size;
  }
}

.sr_only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

.section {
  display: flex;
  flex-direction: column;
}

.container {
  width: min($container-max-width, 100%);
  margin: 0 auto;
}

.container_text {
  padding: 0 2rem;

  @media(min-width:500px) {
    padding: 0 5rem;
  }
}

.text_lg {
  font-size: 2.4rem;
  line-height: 1.4;
  font-weight: 600;
  margin: 0 0 2.2em;
  color: lighten(get-color(neutrals-black), 5%);
  transform: translateY(1em);
  opacity: 0;
  transition: .8s ease .3s;

  &.text_lg__isVisible {
    transform: translateY(0);
    opacity: 1;
  }
}

.page_wrapper {
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: stretch;
}

.main {
  flex-grow: 1;
}

.hidden {
  visibility: hidden;
}

.flex {
  display: flex;
}